## DI, IoC, 그리고 Bean

### DI
- 강한 결합은 문제점을 야기시킵니다.
- Repository 생성자 변경에 의해 그에 속한 모든 Controller와 모든 Service 코드 변경 필요
- 그래서 이 문제점을 해결하기 위해 '느슨한 결합' 을 만듭니다.

##### 느슨한 결합?
- 각 객체에 대한 객체 생성은 딱 1번만 한다.
- 생성된 객체를 모든 곳에서 재사용!
- 느슨한 결합을 통해 Repository 생성자 변경은 연계적인 피해 확산을 방지
- 생성자가 변경되도 모든 Controller 에서 Controller 변경을 하지 않아도 된다.
